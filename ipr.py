# -*- coding: utf-8 -*-
"""IPR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Yne9yYLeFCC-KbIutt6iz_vDafFyaN5
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
# %matplotlib inline
import plotly.graph_objs as go
from google.colab import files
import plotly.express as px
import math

uploaded= files.upload()
pdata = pd.read_excel('newdata.xlsx')
df = pd.DataFrame({'pressure(psig)':pdata['pressure']})
df



perm = float(input('Enter the permeability of the reservoir:\n'))
print(f'{perm} md')

ofv = float(input('Enter the oil formation volume factor value: \n '))
print(f'{ofv} bbl/stb')

skin = float(input('Enter the Skin value: \n'))

visco = float(input('Enter the viscosity of crude oil:\n '))
print(f'{visco} Cp')

height = float(input('Enter the Height Of the Pay Zone: \n'))
print(f'{height} ft')

R_pressure = float(input('Enter the initial Reservoir pressure: \n'))
print(f'{R_pressure} psi')

re = float(input('Enter the Drianage are of Reservoir: \n '))
print(f'{re} ft')

rw = float(input('Enter the Well bore radius:\n '))
print(f'{rw} ft')

q = round((perm*height*R_pressure)/(141.2*ofv*visco*(math.log(re/rw)+(skin))),2)

print(f'qmax ={q} bbl/day')

qipr1,j1 = list(), list()
Pp = pdata['pressure']
length = len(Pp)
j = np.where(Pp==R_pressure)
b=int(j[0])
l=b+1

qipr = q*(1- 0.2*((Pp[0])/(R_pressure))-0.8*((Pp[0])/(R_pressure))**2)
j = (qipr)/(R_pressure-Pp[0])

for i in range(0,length):
  qipr = q*(1- 0.2*((Pp[i])/(R_pressure))-0.8*((Pp[i])/(R_pressure))**2)
  qipr1.append(qipr)
  j = (qipr)/(R_pressure-Pp[i])
  j1.append(j)


df['q'] = qipr1
df['J'] = j1
df



plt.figure(figsize=(10,7))
plt.plot(qipr1,Pp,'--',color='r')
plt.xlabel("Q")
plt.ylabel("P(psi)")
plt.plot()
plt.grid()
plt.show()

fig=go.Figure()
fig = px.line(df, x="q", y="pressure(psig)",)
fig.update_layout(title= f'IPR ',width=800, height=450)
fig.show()

